// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.27.2
// source: IM.proto

package IMsystem

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendToReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ToName  string `protobuf:"bytes,2,opt,name=toName,proto3" json:"toName,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendToReq) Reset() {
	*x = SendToReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IM_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToReq) ProtoMessage() {}

func (x *SendToReq) ProtoReflect() protoreflect.Message {
	mi := &file_IM_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToReq.ProtoReflect.Descriptor instead.
func (*SendToReq) Descriptor() ([]byte, []int) {
	return file_IM_proto_rawDescGZIP(), []int{0}
}

func (x *SendToReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SendToReq) GetToName() string {
	if x != nil {
		return x.ToName
	}
	return ""
}

func (x *SendToReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SendToResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok         bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
}

func (x *SendToResp) Reset() {
	*x = SendToResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IM_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendToResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendToResp) ProtoMessage() {}

func (x *SendToResp) ProtoReflect() protoreflect.Message {
	mi := &file_IM_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendToResp.ProtoReflect.Descriptor instead.
func (*SendToResp) Descriptor() ([]byte, []int) {
	return file_IM_proto_rawDescGZIP(), []int{1}
}

func (x *SendToResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SendToResp) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

type BroadcastReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BroadcastReq) Reset() {
	*x = BroadcastReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IM_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastReq) ProtoMessage() {}

func (x *BroadcastReq) ProtoReflect() protoreflect.Message {
	mi := &file_IM_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastReq.ProtoReflect.Descriptor instead.
func (*BroadcastReq) Descriptor() ([]byte, []int) {
	return file_IM_proto_rawDescGZIP(), []int{2}
}

func (x *BroadcastReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BroadcastReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BroadcastResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok         bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
}

func (x *BroadcastResp) Reset() {
	*x = BroadcastResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IM_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastResp) ProtoMessage() {}

func (x *BroadcastResp) ProtoReflect() protoreflect.Message {
	mi := &file_IM_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastResp.ProtoReflect.Descriptor instead.
func (*BroadcastResp) Descriptor() ([]byte, []int) {
	return file_IM_proto_rawDescGZIP(), []int{3}
}

func (x *BroadcastResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *BroadcastResp) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

type ChangeNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	NewName string `protobuf:"bytes,2,opt,name=newName,proto3" json:"newName,omitempty"`
}

func (x *ChangeNameReq) Reset() {
	*x = ChangeNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IM_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNameReq) ProtoMessage() {}

func (x *ChangeNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_IM_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNameReq.ProtoReflect.Descriptor instead.
func (*ChangeNameReq) Descriptor() ([]byte, []int) {
	return file_IM_proto_rawDescGZIP(), []int{4}
}

func (x *ChangeNameReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeNameReq) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type ChangeNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok         bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ErrMessage string `protobuf:"bytes,2,opt,name=errMessage,proto3" json:"errMessage,omitempty"`
}

func (x *ChangeNameResp) Reset() {
	*x = ChangeNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IM_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNameResp) ProtoMessage() {}

func (x *ChangeNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_IM_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNameResp.ProtoReflect.Descriptor instead.
func (*ChangeNameResp) Descriptor() ([]byte, []int) {
	return file_IM_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeNameResp) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ChangeNameResp) GetErrMessage() string {
	if x != nil {
		return x.ErrMessage
	}
	return ""
}

var File_IM_proto protoreflect.FileDescriptor

var file_IM_proto_rawDesc = []byte{
	0x0a, 0x08, 0x49, 0x4d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x09, 0x53, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x0d, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3d, 0x0a, 0x0d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0x89, 0x01, 0x0a, 0x09,
	0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x06, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x12, 0x0a, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x0b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x09,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x0d, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x14, 0x5a, 0x12, 0x2f, 0x49, 0x4d, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x3b, 0x49, 0x4d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_IM_proto_rawDescOnce sync.Once
	file_IM_proto_rawDescData = file_IM_proto_rawDesc
)

func file_IM_proto_rawDescGZIP() []byte {
	file_IM_proto_rawDescOnce.Do(func() {
		file_IM_proto_rawDescData = protoimpl.X.CompressGZIP(file_IM_proto_rawDescData)
	})
	return file_IM_proto_rawDescData
}

var file_IM_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_IM_proto_goTypes = []interface{}{
	(*SendToReq)(nil),      // 0: SendToReq
	(*SendToResp)(nil),     // 1: SendToResp
	(*BroadcastReq)(nil),   // 2: BroadcastReq
	(*BroadcastResp)(nil),  // 3: BroadcastResp
	(*ChangeNameReq)(nil),  // 4: ChangeNameReq
	(*ChangeNameResp)(nil), // 5: ChangeNameResp
}
var file_IM_proto_depIdxs = []int32{
	0, // 0: IMService.SendTo:input_type -> SendToReq
	2, // 1: IMService.Broadcast:input_type -> BroadcastReq
	4, // 2: IMService.ChangeName:input_type -> ChangeNameReq
	1, // 3: IMService.SendTo:output_type -> SendToResp
	3, // 4: IMService.Broadcast:output_type -> BroadcastResp
	5, // 5: IMService.ChangeName:output_type -> ChangeNameResp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_IM_proto_init() }
func file_IM_proto_init() {
	if File_IM_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_IM_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IM_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendToResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IM_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IM_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IM_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_IM_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_IM_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_IM_proto_goTypes,
		DependencyIndexes: file_IM_proto_depIdxs,
		MessageInfos:      file_IM_proto_msgTypes,
	}.Build()
	File_IM_proto = out.File
	file_IM_proto_rawDesc = nil
	file_IM_proto_goTypes = nil
	file_IM_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IMServiceClient is the client API for IMService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IMServiceClient interface {
	SendTo(ctx context.Context, in *SendToReq, opts ...grpc.CallOption) (*SendToResp, error)
	Broadcast(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastResp, error)
	ChangeName(ctx context.Context, in *ChangeNameReq, opts ...grpc.CallOption) (*ChangeNameResp, error)
}

type iMServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIMServiceClient(cc grpc.ClientConnInterface) IMServiceClient {
	return &iMServiceClient{cc}
}

func (c *iMServiceClient) SendTo(ctx context.Context, in *SendToReq, opts ...grpc.CallOption) (*SendToResp, error) {
	out := new(SendToResp)
	err := c.cc.Invoke(ctx, "/IMService/SendTo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMServiceClient) Broadcast(ctx context.Context, in *BroadcastReq, opts ...grpc.CallOption) (*BroadcastResp, error) {
	out := new(BroadcastResp)
	err := c.cc.Invoke(ctx, "/IMService/Broadcast", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iMServiceClient) ChangeName(ctx context.Context, in *ChangeNameReq, opts ...grpc.CallOption) (*ChangeNameResp, error) {
	out := new(ChangeNameResp)
	err := c.cc.Invoke(ctx, "/IMService/ChangeName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IMServiceServer is the server API for IMService service.
type IMServiceServer interface {
	SendTo(context.Context, *SendToReq) (*SendToResp, error)
	Broadcast(context.Context, *BroadcastReq) (*BroadcastResp, error)
	ChangeName(context.Context, *ChangeNameReq) (*ChangeNameResp, error)
}

// UnimplementedIMServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIMServiceServer struct {
}

func (*UnimplementedIMServiceServer) SendTo(context.Context, *SendToReq) (*SendToResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTo not implemented")
}
func (*UnimplementedIMServiceServer) Broadcast(context.Context, *BroadcastReq) (*BroadcastResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Broadcast not implemented")
}
func (*UnimplementedIMServiceServer) ChangeName(context.Context, *ChangeNameReq) (*ChangeNameResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeName not implemented")
}

func RegisterIMServiceServer(s *grpc.Server, srv IMServiceServer) {
	s.RegisterService(&_IMService_serviceDesc, srv)
}

func _IMService_SendTo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendToReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMServiceServer).SendTo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IMService/SendTo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMServiceServer).SendTo(ctx, req.(*SendToReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMService_Broadcast_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BroadcastReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMServiceServer).Broadcast(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IMService/Broadcast",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMServiceServer).Broadcast(ctx, req.(*BroadcastReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _IMService_ChangeName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IMServiceServer).ChangeName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/IMService/ChangeName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IMServiceServer).ChangeName(ctx, req.(*ChangeNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _IMService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "IMService",
	HandlerType: (*IMServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendTo",
			Handler:    _IMService_SendTo_Handler,
		},
		{
			MethodName: "Broadcast",
			Handler:    _IMService_Broadcast_Handler,
		},
		{
			MethodName: "ChangeName",
			Handler:    _IMService_ChangeName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "IM.proto",
}
